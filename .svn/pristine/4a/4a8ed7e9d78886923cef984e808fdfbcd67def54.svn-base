{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import*as WebBrowser from'expo-web-browser';import React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Image from\"react-native-web/dist/exports/Image\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import Touchable from'react-native-platform-touchable';import{Ionicons}from'@expo/vector-icons';var ExpoLinksScreen=function(_React$Component){_inherits(ExpoLinksScreen,_React$Component);function ExpoLinksScreen(){var _getPrototypeOf2;var _this;_classCallCheck(this,ExpoLinksScreen);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(ExpoLinksScreen)).call.apply(_getPrototypeOf2,[this].concat(args)));_this._handlePressDocs=function(){WebBrowser.openBrowserAsync('http://docs.expo.io');};_this._handlePressForums=function(){WebBrowser.openBrowserAsync('http://forums.expo.io');};return _this;}_createClass(ExpoLinksScreen,[{key:\"render\",value:function render(){return React.createElement(View,null,React.createElement(Text,{style:styles.optionsTitleText},\"Resources\"),React.createElement(Touchable,{style:styles.option,background:Touchable.Ripple('#ccc',false),onPress:this._handlePressDocs},React.createElement(View,{style:{flexDirection:'row'}},React.createElement(View,{style:styles.optionIconContainer},React.createElement(Image,{source:require(\"./assets/images/expo-icon.png\"),resizeMode:\"contain\",fadeDuration:0,style:{width:20,height:20,marginTop:1}})),React.createElement(View,{style:styles.optionTextContainer},React.createElement(Text,{style:styles.optionText},\"Read the Expo documentation\")))),React.createElement(Touchable,{style:styles.option,background:Touchable.Ripple('#ccc',false),onPress:this._handlePressForums},React.createElement(View,{style:{flexDirection:'row'}},React.createElement(View,{style:styles.optionIconContainer},React.createElement(Ionicons,{name:\"ios-chatboxes\",size:22,color:\"#ccc\"})),React.createElement(View,{style:styles.optionTextContainer},React.createElement(Text,{style:styles.optionText},\"Ask a question on the Expo forums\")))));}}]);return ExpoLinksScreen;}(React.Component);export{ExpoLinksScreen as default};var styles=StyleSheet.create({container:{flex:1,paddingTop:15},optionsTitleText:{fontSize:16,marginLeft:15,marginTop:9,marginBottom:12},optionIconContainer:{marginRight:9},option:{backgroundColor:'#fdfdfd',paddingHorizontal:15,paddingVertical:15,borderBottomWidth:StyleSheet.hairlineWidth,borderBottomColor:'#EDEDED'},optionText:{fontSize:15,marginTop:1}});","map":{"version":3,"sources":["C:/Users/Prashant Krishnan/Expo/project/node_modules/@expo/samples/ExpoLinksView.js"],"names":["WebBrowser","React","Touchable","Ionicons","ExpoLinksScreen","_handlePressDocs","openBrowserAsync","_handlePressForums","styles","optionsTitleText","option","Ripple","flexDirection","optionIconContainer","require","width","height","marginTop","optionTextContainer","optionText","Component","StyleSheet","create","container","flex","paddingTop","fontSize","marginLeft","marginBottom","marginRight","backgroundColor","paddingHorizontal","paddingVertical","borderBottomWidth","hairlineWidth","borderBottomColor"],"mappings":"mVAAA,MAAO,GAAKA,CAAAA,UAAZ,KAA4B,kBAA5B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,kOAEA,MAAOC,CAAAA,SAAP,KAAsB,iCAAtB,CACA,OAASC,QAAT,KAAyB,oBAAzB,C,GAEqBC,CAAAA,e,kaA0CnBC,gB,CAAmB,UAAM,CACvBL,UAAU,CAACM,gBAAX,CAA4B,qBAA5B,EACD,C,OAEDC,kB,CAAqB,UAAM,CACzBP,UAAU,CAACM,gBAAX,CAA4B,uBAA5B,EACD,C,kFA/CQ,CACP,MACE,qBAAC,IAAD,MACE,oBAAC,IAAD,EAAM,KAAK,CAAEE,MAAM,CAACC,gBAApB,cADF,CAGE,oBAAC,SAAD,EACE,KAAK,CAAED,MAAM,CAACE,MADhB,CAEE,UAAU,CAAER,SAAS,CAACS,MAAV,CAAiB,MAAjB,CAAyB,KAAzB,CAFd,CAGE,OAAO,CAAE,KAAKN,gBAHhB,EAIE,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEO,aAAa,CAAE,KAAjB,CAAb,EACE,oBAAC,IAAD,EAAM,KAAK,CAAEJ,MAAM,CAACK,mBAApB,EACE,oBAAC,KAAD,EACE,MAAM,CAAEC,OAAO,iCADjB,CAEE,UAAU,CAAC,SAFb,CAGE,YAAY,CAAE,CAHhB,CAIE,KAAK,CAAE,CAAEC,KAAK,CAAE,EAAT,CAAaC,MAAM,CAAE,EAArB,CAAyBC,SAAS,CAAE,CAApC,CAJT,EADF,CADF,CASE,oBAAC,IAAD,EAAM,KAAK,CAAET,MAAM,CAACU,mBAApB,EACE,oBAAC,IAAD,EAAM,KAAK,CAAEV,MAAM,CAACW,UAApB,gCADF,CATF,CAJF,CAHF,CAsBE,oBAAC,SAAD,EACE,KAAK,CAAEX,MAAM,CAACE,MADhB,CAEE,UAAU,CAAER,SAAS,CAACS,MAAV,CAAiB,MAAjB,CAAyB,KAAzB,CAFd,CAGE,OAAO,CAAE,KAAKJ,kBAHhB,EAIE,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEK,aAAa,CAAE,KAAjB,CAAb,EACE,oBAAC,IAAD,EAAM,KAAK,CAAEJ,MAAM,CAACK,mBAApB,EACE,oBAAC,QAAD,EAAU,IAAI,CAAC,eAAf,CAA+B,IAAI,CAAE,EAArC,CAAyC,KAAK,CAAC,MAA/C,EADF,CADF,CAIE,oBAAC,IAAD,EAAM,KAAK,CAAEL,MAAM,CAACU,mBAApB,EACE,oBAAC,IAAD,EAAM,KAAK,CAAEV,MAAM,CAACW,UAApB,sCADF,CAJF,CAJF,CAtBF,CADF,CAsCD,C,6BAxC0ClB,KAAK,CAACmB,S,SAA9BhB,e,aAmDrB,GAAMI,CAAAA,MAAM,CAAGa,UAAU,CAACC,MAAX,CAAkB,CAC/BC,SAAS,CAAE,CACTC,IAAI,CAAE,CADG,CAETC,UAAU,CAAE,EAFH,CADoB,CAK/BhB,gBAAgB,CAAE,CAChBiB,QAAQ,CAAE,EADM,CAEhBC,UAAU,CAAE,EAFI,CAGhBV,SAAS,CAAE,CAHK,CAIhBW,YAAY,CAAE,EAJE,CALa,CAW/Bf,mBAAmB,CAAE,CACnBgB,WAAW,CAAE,CADM,CAXU,CAc/BnB,MAAM,CAAE,CACNoB,eAAe,CAAE,SADX,CAENC,iBAAiB,CAAE,EAFb,CAGNC,eAAe,CAAE,EAHX,CAINC,iBAAiB,CAAEZ,UAAU,CAACa,aAJxB,CAKNC,iBAAiB,CAAE,SALb,CAduB,CAqB/BhB,UAAU,CAAE,CACVO,QAAQ,CAAE,EADA,CAEVT,SAAS,CAAE,CAFD,CArBmB,CAAlB,CAAf","sourcesContent":["import * as WebBrowser from 'expo-web-browser';\nimport React from 'react';\nimport { StyleSheet, Image, Text, View } from 'react-native';\nimport Touchable from 'react-native-platform-touchable';\nimport { Ionicons } from '@expo/vector-icons';\n\nexport default class ExpoLinksScreen extends React.Component {\n  render() {\n    return (\n      <View>\n        <Text style={styles.optionsTitleText}>Resources</Text>\n\n        <Touchable\n          style={styles.option}\n          background={Touchable.Ripple('#ccc', false)}\n          onPress={this._handlePressDocs}>\n          <View style={{ flexDirection: 'row' }}>\n            <View style={styles.optionIconContainer}>\n              <Image\n                source={require('./assets/images/expo-icon.png')}\n                resizeMode=\"contain\"\n                fadeDuration={0}\n                style={{ width: 20, height: 20, marginTop: 1 }}\n              />\n            </View>\n            <View style={styles.optionTextContainer}>\n              <Text style={styles.optionText}>Read the Expo documentation</Text>\n            </View>\n          </View>\n        </Touchable>\n\n        <Touchable\n          style={styles.option}\n          background={Touchable.Ripple('#ccc', false)}\n          onPress={this._handlePressForums}>\n          <View style={{ flexDirection: 'row' }}>\n            <View style={styles.optionIconContainer}>\n              <Ionicons name=\"ios-chatboxes\" size={22} color=\"#ccc\" />\n            </View>\n            <View style={styles.optionTextContainer}>\n              <Text style={styles.optionText}>Ask a question on the Expo forums</Text>\n            </View>\n          </View>\n        </Touchable>\n      </View>\n    );\n  }\n\n  _handlePressDocs = () => {\n    WebBrowser.openBrowserAsync('http://docs.expo.io');\n  };\n\n  _handlePressForums = () => {\n    WebBrowser.openBrowserAsync('http://forums.expo.io');\n  };\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 15,\n  },\n  optionsTitleText: {\n    fontSize: 16,\n    marginLeft: 15,\n    marginTop: 9,\n    marginBottom: 12,\n  },\n  optionIconContainer: {\n    marginRight: 9,\n  },\n  option: {\n    backgroundColor: '#fdfdfd',\n    paddingHorizontal: 15,\n    paddingVertical: 15,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: '#EDEDED',\n  },\n  optionText: {\n    fontSize: 15,\n    marginTop: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}