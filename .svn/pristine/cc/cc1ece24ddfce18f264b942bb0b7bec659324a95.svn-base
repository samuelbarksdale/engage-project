import express from 'express';
import mongoose from 'mongoose';
import bodyParser from 'body-parser';
import { userInfo } from 'os';


const app = express();
const port = 5656;

app.use(bodyParser.urlencoded({
    extended: true
}));
app.use(bodyParser.json());

mongoose
    .connect(
        'mongodb://mongo:27017/course-service',
        { useNewUrlParser: true}
    )
    .then(() => console.log('MongoDB Connected'))
    .catch(err => console.log(err));

const Schema = mongoose.Schema;

const pollModel = new Schema({
    id: {type: String},
    course_id: {type: String},
    active_status: [{type: Date},{type: Date}],
    question: {type: String},
    // choices: [{
    //     choice_id: {type: String},
    //     votes: {type: Number},
    //     voters: [{student_id: {type:  String}}]
    // }]
    // text_answers: [{
    //     answer: {type: String},
    //     student_id: {type: String}
    // }] not sure how to declare array of json for mongoose schema
});

var Polls = mongoose.model('polls', pollModel);

app.get('/', (req, res) => {
    Polls.find({}, (err, polls) => {
        res.json(polls)
    });
});

app.post('/polls/', (req, res) =>{
    let newPoll = new Polls(req.body);
    newPoll.save();
    res.status(201).send(newPoll);
});

app.get('/polls/courses/:course_id/', (req, res) => {
    
})

app.get('/polls/students/:student_id/', (req, res) => {
    
})

app.get('/polls/:poll_id/', (req, res) => {

})

app.get('/polls/:poll_id/choices/:choice_id', (req, res) => {
    
})

app.put('/polls/:poll_id/courses/:course_id/', (req, res) => {
    
})

app.delete('/polls/:poll_id/courses/:course_id/', (req, res) => {
    
})

app.listen(port, (err) => {
    if (err) {
        return console.error(err)
    }
    return console.log(`Server listening on port ${port}`);
})