{"ast":null,"code":"import{StackRouter,createNavigator}from'@react-navigation/core';import{createKeyboardAwareNavigator}from'@react-navigation/native';import Platform from\"react-native-web/dist/exports/Platform\";import StackView from\"../views/StackView/StackView\";function createStackNavigator(routeConfigMap){var stackConfig=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var router=StackRouter(routeConfigMap,stackConfig);var Navigator=createNavigator(StackView,router,stackConfig);if(!stackConfig.disableKeyboardHandling&&Platform.OS!=='web'){Navigator=createKeyboardAwareNavigator(Navigator,stackConfig);}return Navigator;}export default createStackNavigator;","map":{"version":3,"sources":["createStackNavigator.tsx"],"names":["stackConfig","router","StackRouter","Navigator","createNavigator","Platform","createKeyboardAwareNavigator"],"mappings":"AAAA,OAAA,WAAA,CAAA,eAAA,KAAA,wBAAA,CACA,OAAA,4BAAA,KAAA,0BAAA,C,6DAEA,MAAA,CAAA,SAAA,oCAOA,QAAA,CAAA,oBAAA,CAAA,cAAA,CAkBE,CARAA,GAAAA,CAAAA,WAQA,CAAA,SAAA,CAAA,MAAA,CAAA,CAAA,EAAA,SAAA,CAAA,CAAA,CAAA,GAAA,SAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CADI,EAPJA,CASA,GAAMC,CAAAA,MAAM,CAAGC,WAAW,CAAA,cAAA,CAA1B,WAA0B,CAA1B,CAGA,GAAIC,CAAAA,SAAS,CAAGC,eAAe,CAAA,SAAA,CAAA,MAAA,CAA/B,WAA+B,CAA/B,CACA,GAAI,CAACJ,WAAW,CAAZ,uBAAA,EAAwCK,QAAQ,CAARA,EAAAA,GAA5C,KAAA,CAAmE,CACjEF,SAAS,CAAGG,4BAA4B,CAAA,SAAA,CAAxCH,WAAwC,CAAxCA,CAGF,OAAA,CAAA,SAAA,CAGF,eAAA,CAAA,oBAAA","sourcesContent":["import { StackRouter, createNavigator } from '@react-navigation/core';\nimport { createKeyboardAwareNavigator } from '@react-navigation/native';\nimport { Platform } from 'react-native';\nimport StackView from '../views/StackView/StackView';\nimport {\n  NavigationStackScreenOptions,\n  NavigationStackConfig,\n  Screen,\n} from '../types';\n\nfunction createStackNavigator(\n  routeConfigMap: {\n    [key: string]:\n      | Screen\n      | ({ screen: Screen } | { getScreen(): Screen }) & {\n          path?: string;\n          navigationOptions?: NavigationStackScreenOptions;\n          params?: { [key: string]: any };\n        };\n  },\n  stackConfig: NavigationStackConfig & {\n    initialRouteName?: string;\n    initialRouteParams?: { [key: string]: any };\n    paths?: { [routeName: string]: string };\n    defaultNavigationOptions?: NavigationStackScreenOptions;\n    navigationOptions?: NavigationStackScreenOptions;\n    initialRouteKey?: string;\n  } = {}\n) {\n  const router = StackRouter(routeConfigMap, stackConfig);\n\n  // Create a navigator with StackView as the view\n  let Navigator = createNavigator(StackView, router, stackConfig);\n  if (!stackConfig.disableKeyboardHandling && Platform.OS !== 'web') {\n    Navigator = createKeyboardAwareNavigator(Navigator, stackConfig);\n  }\n\n  return Navigator;\n}\n\nexport default createStackNavigator;\n"]},"metadata":{},"sourceType":"module"}