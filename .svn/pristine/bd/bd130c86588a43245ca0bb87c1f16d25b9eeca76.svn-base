{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import React from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{ThemeContext}from'@react-navigation/core';import{SafeAreaView}from'@react-navigation/native';import TouchableItem from\"./TouchableItem\";var DrawerNavigatorItems=function(_React$Component){_inherits(DrawerNavigatorItems,_React$Component);function DrawerNavigatorItems(){var _getPrototypeOf2;var _this;_classCallCheck(this,DrawerNavigatorItems);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(DrawerNavigatorItems)).call.apply(_getPrototypeOf2,[this].concat(args)));_this._getActiveTintColor=function(){var activeTintColor=_this.props.activeTintColor;if(!activeTintColor){return;}else if(typeof activeTintColor==='string'){return activeTintColor;}return activeTintColor[_this.context];};_this._getInactiveTintColor=function(){var inactiveTintColor=_this.props.inactiveTintColor;if(!inactiveTintColor){return;}else if(typeof inactiveTintColor==='string'){return inactiveTintColor;}return inactiveTintColor[_this.context];};_this._getActiveBackgroundColor=function(){var activeBackgroundColor=_this.props.activeBackgroundColor;if(!activeBackgroundColor){return;}else if(typeof activeBackgroundColor==='string'){return activeBackgroundColor;}return activeBackgroundColor[_this.context];};_this._getInactiveBackgroundColor=function(){var inactiveBackgroundColor=_this.props.inactiveBackgroundColor;if(!inactiveBackgroundColor){return;}else if(typeof inactiveBackgroundColor==='string'){return inactiveBackgroundColor;}return inactiveBackgroundColor[_this.context];};return _this;}_createClass(DrawerNavigatorItems,[{key:\"render\",value:function render(){var _this$props=this.props,items=_this$props.items,activeItemKey=_this$props.activeItemKey,getLabel=_this$props.getLabel,renderIcon=_this$props.renderIcon,onItemPress=_this$props.onItemPress,itemsContainerStyle=_this$props.itemsContainerStyle,itemStyle=_this$props.itemStyle,labelStyle=_this$props.labelStyle,activeLabelStyle=_this$props.activeLabelStyle,inactiveLabelStyle=_this$props.inactiveLabelStyle,iconContainerStyle=_this$props.iconContainerStyle,drawerPosition=_this$props.drawerPosition;var activeTintColor=this._getActiveTintColor();var inactiveTintColor=this._getInactiveTintColor();var activeBackgroundColor=this._getActiveBackgroundColor();var inactiveBackgroundColor=this._getInactiveBackgroundColor();return React.createElement(View,{style:[styles.container,itemsContainerStyle]},items.map(function(route,index){var _ref;var focused=activeItemKey===route.key;var color=focused?activeTintColor:inactiveTintColor;var backgroundColor=focused?activeBackgroundColor:inactiveBackgroundColor;var scene={route:route,index:index,focused:focused,tintColor:color};var icon=renderIcon(scene);var label=getLabel(scene);var accessibilityLabel=typeof label==='string'?label:undefined;var extraLabelStyle=focused?activeLabelStyle:inactiveLabelStyle;return React.createElement(TouchableItem,{key:route.key,accessible:true,accessibilityLabel:accessibilityLabel,onPress:function onPress(){onItemPress({route:route,focused:focused});},delayPressIn:0},React.createElement(SafeAreaView,{style:[{backgroundColor:backgroundColor},styles.item,itemStyle],forceInset:(_ref={},_defineProperty(_ref,drawerPosition,'always'),_defineProperty(_ref,drawerPosition==='left'?'right':'left','never'),_defineProperty(_ref,\"vertical\",'never'),_ref)},icon?React.createElement(View,{style:[styles.icon,focused?null:styles.inactiveIcon,iconContainerStyle]},icon):null,typeof label==='string'?React.createElement(Text,{style:[styles.label,{color:color},labelStyle,extraLabelStyle]},label):label));}));}}]);return DrawerNavigatorItems;}(React.Component);DrawerNavigatorItems.contextType=ThemeContext;DrawerNavigatorItems.defaultProps={activeTintColor:{light:'#2196f3',dark:'#fff'},activeBackgroundColor:{light:'rgba(0, 0, 0, .04)',dark:'rgba(255, 255, 255, .04)'},inactiveTintColor:{light:'rgba(0, 0, 0, .87)',dark:'rgba(255, 255, 255, .87)'},inactiveBackgroundColor:'transparent'};var styles=StyleSheet.create({container:{paddingVertical:4},item:{flexDirection:'row',alignItems:'center'},icon:{marginHorizontal:16,width:24,alignItems:'center'},inactiveIcon:{opacity:0.62},label:{margin:16,fontWeight:'bold'}});export default DrawerNavigatorItems;","map":{"version":3,"sources":["C:/Users/Prashant Krishnan/Expo/project/node_modules/react-navigation-drawer/dist/views/DrawerNavigatorItems.js"],"names":["React","ThemeContext","SafeAreaView","TouchableItem","DrawerNavigatorItems","_getActiveTintColor","activeTintColor","props","context","_getInactiveTintColor","inactiveTintColor","_getActiveBackgroundColor","activeBackgroundColor","_getInactiveBackgroundColor","inactiveBackgroundColor","items","activeItemKey","getLabel","renderIcon","onItemPress","itemsContainerStyle","itemStyle","labelStyle","activeLabelStyle","inactiveLabelStyle","iconContainerStyle","drawerPosition","styles","container","map","route","index","focused","key","color","backgroundColor","scene","tintColor","icon","label","accessibilityLabel","undefined","extraLabelStyle","item","inactiveIcon","Component","contextType","defaultProps","light","dark","StyleSheet","create","paddingVertical","flexDirection","alignItems","marginHorizontal","width","opacity","margin","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { ThemeContext } from '@react-navigation/core';\nimport { SafeAreaView } from '@react-navigation/native';\nimport TouchableItem from './TouchableItem';\n\n/**\n * Component that renders the navigation list in the drawer.\n */\nclass DrawerNavigatorItems extends React.Component {\n  static contextType = ThemeContext;\n\n  _getActiveTintColor = () => {\n    let { activeTintColor } = this.props;\n    if (!activeTintColor) {\n      return;\n    } else if (typeof activeTintColor === 'string') {\n      return activeTintColor;\n    }\n\n    return activeTintColor[this.context];\n  };\n\n  _getInactiveTintColor = () => {\n    let { inactiveTintColor } = this.props;\n    if (!inactiveTintColor) {\n      return;\n    } else if (typeof inactiveTintColor === 'string') {\n      return inactiveTintColor;\n    }\n\n    return inactiveTintColor[this.context];\n  };\n\n  _getActiveBackgroundColor = () => {\n    let { activeBackgroundColor } = this.props;\n    if (!activeBackgroundColor) {\n      return;\n    } else if (typeof activeBackgroundColor === 'string') {\n      return activeBackgroundColor;\n    }\n\n    return activeBackgroundColor[this.context];\n  };\n\n  _getInactiveBackgroundColor = () => {\n    let { inactiveBackgroundColor } = this.props;\n    if (!inactiveBackgroundColor) {\n      return;\n    } else if (typeof inactiveBackgroundColor === 'string') {\n      return inactiveBackgroundColor;\n    }\n\n    return inactiveBackgroundColor[this.context];\n  };\n\n  render() {\n    const {\n      items,\n      activeItemKey,\n      getLabel,\n      renderIcon,\n      onItemPress,\n      itemsContainerStyle,\n      itemStyle,\n      labelStyle,\n      activeLabelStyle,\n      inactiveLabelStyle,\n      iconContainerStyle,\n      drawerPosition\n    } = this.props;\n\n    const activeTintColor = this._getActiveTintColor();\n    const inactiveTintColor = this._getInactiveTintColor();\n    const activeBackgroundColor = this._getActiveBackgroundColor();\n    const inactiveBackgroundColor = this._getInactiveBackgroundColor();\n\n    return <View style={[styles.container, itemsContainerStyle]}>\n        {items.map((route, index) => {\n        const focused = activeItemKey === route.key;\n        const color = focused ? activeTintColor : inactiveTintColor;\n        const backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n        const scene = { route, index, focused, tintColor: color };\n        const icon = renderIcon(scene);\n        const label = getLabel(scene);\n        const accessibilityLabel = typeof label === 'string' ? label : undefined;\n        const extraLabelStyle = focused ? activeLabelStyle : inactiveLabelStyle;\n        return <TouchableItem key={route.key} accessible accessibilityLabel={accessibilityLabel} onPress={() => {\n          onItemPress({ route, focused });\n        }} delayPressIn={0}>\n              <SafeAreaView style={[{ backgroundColor }, styles.item, itemStyle]} forceInset={{\n            [drawerPosition]: 'always',\n            [drawerPosition === 'left' ? 'right' : 'left']: 'never',\n            vertical: 'never'\n          }}>\n                {icon ? <View style={[styles.icon, focused ? null : styles.inactiveIcon, iconContainerStyle]}>\n                    {icon}\n                  </View> : null}\n                {typeof label === 'string' ? <Text style={[styles.label, { color }, labelStyle, extraLabelStyle]}>\n                    {label}\n                  </Text> : label}\n              </SafeAreaView>\n            </TouchableItem>;\n      })}\n      </View>;\n  }\n}\n\n/* Material design specs - https://material.io/guidelines/patterns/navigation-drawer.html#navigation-drawer-specs */\nDrawerNavigatorItems.defaultProps = {\n  activeTintColor: {\n    light: '#2196f3',\n    dark: '#fff'\n  },\n  activeBackgroundColor: {\n    light: 'rgba(0, 0, 0, .04)',\n    dark: 'rgba(255, 255, 255, .04)'\n  },\n  inactiveTintColor: {\n    light: 'rgba(0, 0, 0, .87)',\n    dark: 'rgba(255, 255, 255, .87)'\n  },\n  inactiveBackgroundColor: 'transparent'\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4\n  },\n  item: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  icon: {\n    marginHorizontal: 16,\n    width: 24,\n    alignItems: 'center'\n  },\n  inactiveIcon: {\n    /*\n     * Icons have 0.54 opacity according to guidelines\n     * 100/87 * 54 ~= 62\n     */\n    opacity: 0.62\n  },\n  label: {\n    margin: 16,\n    fontWeight: 'bold'\n  }\n});\n\nexport default DrawerNavigatorItems;"]},"metadata":{},"sourceType":"module"}