import React, { Component} from "react";
import CourseCard from '../components/CourseCard'
import {
    BrowserRouter as Router,
    Link,
    useLocation,
    Switch, 
    Route
  } from "react-router-dom";
  import axios from 'axios';

  import Dashboard from './Dashboard'; 
  import { Form, Button, Card, Col } from 'react-bootstrap';
  import {GeolocationButton }from '../components/GeolocationButton.jsx'
  


const data = [
  {
    'course_id': 1,
    'reason': 'testing reason'
  },
  {
    'course_id': 2,
    'reason': 'testing reason'
  },
  {
    'course_id': 3,
    'reason': 'testing reason'
  }
]; 

type MyState = {
    course_name: string ,
   educators: string, 
   semester: string, 
   students: string, 
   sections: string, 
   lat: string, 
   long: string, 
   radius: string,
   start: string, 
   end: string
   
  };
type MyProps = {}; 

export default class Courses extends React.Component<MyProps, MyState> {
    
   constructor(props: any){
     super(props); 
     this.state = {course_name: '', educators: '', semester: '', students: '', sections: '', lat: '', long: '', radius: '', start: '', end: ''};
     var partialState : any = {};
     this.handleChange = this.handleChange.bind(this);
     this.handleSubmit = this.handleSubmit.bind(this);
   }

    getCoursesFromApiAsync() {

      console.log("here trying to fetch data from localhost data"); 
      return fetch('http://localhost:8080/courses', {
        method: 'GET',
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          
        }
      })
      .then((response) => response.json())
      .then((responseJson) => {
        console.log(" I am here with the response object"); 
        console.log(responseJson) 
        return responseJson;
      })
      .catch((error) => {
        console.error(error);
      });
    }

    postCoursesToApi(){
      console.log("here attempting to post the information"); 

      var arrayOfEducators = this.state.educators.split(','); 
      //var arrayOfStudents = this.state.students.split(',');
      var arrayOfSections : any[] = []
      this.state.sections.split(',').forEach((element) => {
        arrayOfSections.push({
          id: element,
        })
      })

      var postObject = {
        course_id: this.state.course_name, 
        educators: arrayOfEducators, 
        sections: arrayOfSections,
        topics: [],
        Schedule: {
          start: this.state.start, 
          end: this.state.end, 
          location: {
            Lat: this.state.lat,
            Long: this.state.long,
            Radius:this.state.radius            
           }

        }


      }
      alert(JSON.stringify(postObject)); 
      return fetch('http://localhost:8080/courses', {
        method: 'POST',
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(postObject),
      })
      .then((response) => response.json())
      .then((responseJson) => {
        console.log(" I am here with the response object"); 
        console.log(responseJson) 
        return responseJson;
      })
      .catch((error) => {
        console.error(error);
      });

    }

    componentDidMount(){
      console.log("Component Mounted, initiating request to backend courses"); 
      console.log(this.getCoursesFromApiAsync()); 
    }

   handleChange(event : any) {
     
    const target = event.target;
    const value = target.value;
    const name = target.name;
    var partialState : any = {};
    partialState[name] = value;
    this.setState(partialState);
  }

  handleSubmit(event : any) {
    
    console.log(this.postCoursesToApi()); 
    event.preventDefault();
  }



  render() {
   
    let list = data.map((data, index) => {
        return (<CourseCard key={index} title={'courses'} reason={data.reason} course_id={data.course_id}/>)
    }); 

    return (
      <div id="courses">
        <h1>Create new Course if Necessary</h1>
        <div>
        
        <label>
          Course Nam / Course ID: 
          <input  name ="course_name" type="text" value={this.state.course_name} onChange={this.handleChange} />
        </label>
        <label>
          Please Enter Educators (Comma Seperated): 
          <input  name ="educators" type="text" value={this.state.educators} onChange={this.handleChange} />
        </label>
        <label>
          Please Enter the Current Semester: 
          <input  name ="semester" type="text" value={this.state.semester} onChange={this.handleChange} />
        </label>
        <label>
         Please Enter Comma Seperated List of Sections: 
          <input  name ="sections" type="text" value={this.state.sections} onChange={this.handleChange}/>
        </label>
        {/* <label>
         Please Enter a list of Sections: 
          <input  name ="students" type="text" value={this.state.sections} onChange={this.handleChange}/>
        </label> */}
        <GeolocationButton /> 
        <label>
         Please enter the value for latitude that you see
          <input  name ="lat" type="text" value={this.state.lat} onChange={this.handleChange}/>
        </label>
        <label>
          Please Enter the value for longitude that yous ee
            <input  name ="long" type="text" value={this.state.long} onChange={this.handleChange}/>
        </label>
        <label>
         Please enter a radius for your class
          <input  name ="radius" type="text" value={this.state.radius} onChange={this.handleChange}/>
        </label>
        <br></br>
        <label>
         Please enter a Start Time
          <input  name ="start" type="datetime-local" value={this.state.end} onChange={this.handleChange}/>
        </label>
        <br></br>
        <label>
         Please enter a an End time
          <input  name="end" type="datetime-local" value={this.state.start} onChange = {this.handleChange}/>
        </label>
        <br></br>
        <input type="submit" value="Submit" onClick={this.handleSubmit}/>
      
        </div>
        {list}
      </div>
    );
  }
}