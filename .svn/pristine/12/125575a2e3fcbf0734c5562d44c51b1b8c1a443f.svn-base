import React from 'react';
import {Platform} from 'react-native';
import {createStackNavigator} from 'react-navigation-stack';
import {createBottomTabNavigator} from "react-navigation-tabs";
import TabBarIcon from '../components/TabBarIcon';
import HomeScreen from '../screens/HomeScreen';
import LinksScreen from '../screens/LinksScreen';
import SettingsScreen from '../screens/SettingsScreen';
import CourseScreen from "../screens/CourseScreen";
import {checkType} from "../tsUtils";
import en from "../locale/en";

const config = Platform.select<Parameters<typeof createStackNavigator>[1]>({
    web: {headerMode: 'screen'},
    default: {},
});

const CoursesStackRoutes = {
    Courses: HomeScreen,
    Course: CourseScreen
};

export type ICoursesStackRoutes = keyof typeof CoursesStackRoutes;

// HomeScreen.navigationOptions = {
//     header: null,
// };


const CoursesStack = createStackNavigator(
    CoursesStackRoutes,
    {
        ...config,
        initialRouteName: checkType<ICoursesStackRoutes>('Courses'),
        defaultNavigationOptions: {
            header: null,
        }
    }
);

CoursesStack.navigationOptions = {
    tabBarLabel: en.tabs.courseTabText,
    tabBarIcon: ({focused}) => (
        <TabBarIcon
            focused={focused}
            name={
                Platform.OS === 'ios'
                    ? `ios-information-circle${focused ? '' : '-outline'}`
                    : 'md-information-circle'
            }
        />
    ),
};

// CoursesStack.path = '';

const LinksStack = createStackNavigator(
    {
        Links: LinksScreen,
    },
    config
);

LinksStack.navigationOptions = {
    tabBarLabel: en.tabs.engagementTabText,
    tabBarIcon: ({focused}) => (
        <TabBarIcon focused={focused} name={Platform.OS === 'ios' ? 'ios-link' : 'md-link'}/>
    ),
};

// LinksStack.path = '';

const SettingsStack = createStackNavigator(
    {
        Settings: SettingsScreen,
    },
    config
);

SettingsStack.navigationOptions = {
    tabBarLabel: en.tabs.absenceRequestsTabText,
    tabBarIcon: ({focused}) => (
        <TabBarIcon focused={focused} name={Platform.OS === 'ios' ? 'ios-options' : 'md-options'}/>
    ),
};

// SettingsStack.path = '';

const tabNavigator = createBottomTabNavigator({
    CoursesStack,
    LinksStack,
    SettingsStack,
});

// tabNavigator.path = '';

export default tabNavigator;
