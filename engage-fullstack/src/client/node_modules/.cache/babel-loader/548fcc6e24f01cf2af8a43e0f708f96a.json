{"ast":null,"code":"var _jsxFileName = \"/app/src/components/AttendanceGraphs.jsx\";\nimport React, { Component } from 'react';\nimport { ResponsiveContainer, LineChart, Line, XAxis, YAxis, ReferenceLine, ReferenceDot, Tooltip, CartesianGrid, Legend, Brush, ErrorBar, AreaChart, Area, Label, LabelList } from 'recharts';\nimport api from '../api';\nexport default class AttendanceGraphs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      attendance: [],\n      filter: {}\n    };\n  }\n\n  componentWillMount() {}\n\n  async componentDidMount() {\n    let data = await api.getAttendance();\n    let course = await api.getMyClasses();\n    console.log(data);\n    console.log(course.data[0].courseName); // var dateDict = {}\n\n    var dateDict = data.reduce(function (result, record) {\n      if (course.data[0].courseName != record.courseName.toLowerCase()) {\n        return result;\n      } // Day of the week dateArray[0]\n      // Month dateArray[]\n      // Numerical day of the month dateArray[2]\n      // Year dateArray[3]\n\n\n      const timestampConverted = new Date(record.timestamp);\n      var dateStr = timestampConverted.toDateString();\n\n      if (dateStr in result) {\n        result[dateStr] += 1;\n      } else {\n        result[dateStr] = 1;\n      }\n\n      return result;\n    }, {}); // Sorting for date dictionary so that dates will always be in ascending order\n    // when visualizing in graph.\n\n    var items = Object.keys(dateDict).map(function (key) {\n      return [key, dateDict[key]];\n    });\n    items.sort(function (first, second) {\n      var date1 = new Date(first);\n      var date2 = new Date(second);\n      return date1 > date2;\n    });\n    var newState = [];\n    items.map(function (obj) {\n      const attendanceRecord = {\n        date: obj[0],\n        totalAttended: obj[1]\n      };\n      newState.push(attendanceRecord);\n    });\n    this.setState({\n      attendance: newState\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"line-charts-wrapper\",\n      width: \"150px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(LineChart, {\n      width: 1100,\n      height: 600,\n      data: this.state.attendance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      stroke: \"#f5f5f5\",\n      fill: \"#e6e6e6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      onMouseEnter: this.handleLegendMouseEnter,\n      onMouseLeave: this.handleLegendMouseLeave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"date\",\n      height: 40,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Label, {\n      value: \"Current Semester\",\n      position: \"insideBottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(YAxis, {\n      type: \"number\",\n      dataKey: \"totalAttended\",\n      unit: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Label, {\n      value: \"Amount of Students\",\n      position: \"\",\n      angle: -90,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"totalAttended\",\n      stroke: \"#8884d8\",\n      activeDot: {\n        r: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/app/src/components/AttendanceGraphs.jsx"],"names":["React","Component","ResponsiveContainer","LineChart","Line","XAxis","YAxis","ReferenceLine","ReferenceDot","Tooltip","CartesianGrid","Legend","Brush","ErrorBar","AreaChart","Area","Label","LabelList","api","AttendanceGraphs","constructor","props","state","attendance","filter","componentWillMount","componentDidMount","data","getAttendance","course","getMyClasses","console","log","courseName","dateDict","reduce","result","record","toLowerCase","timestampConverted","Date","timestamp","dateStr","toDateString","items","Object","keys","map","key","sort","first","second","date1","date2","newState","obj","attendanceRecord","date","totalAttended","push","setState","render","handleLegendMouseEnter","handleLegendMouseLeave","r"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { ResponsiveContainer, LineChart, Line, XAxis, YAxis, ReferenceLine,\n    ReferenceDot, Tooltip, CartesianGrid, Legend, Brush, ErrorBar, AreaChart, Area,\n    Label, LabelList } from 'recharts'\nimport api from '../api';\n\nexport default class AttendanceGraphs extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {attendance: [], filter: {}\n        }\n    }\n    componentWillMount(){\n        \n\n    }\n\n    async componentDidMount() {\n        let data = await api.getAttendance();\n        let course = await api.getMyClasses();\n        console.log(data);\n        console.log(course.data[0].courseName);\n        \n        // var dateDict = {}\n        var dateDict = data.reduce(function(result, record){\n            if (course.data[0].courseName != record.courseName.toLowerCase()){\n                return result;\n            }\n            // Day of the week dateArray[0]\n            // Month dateArray[]\n            // Numerical day of the month dateArray[2]\n            // Year dateArray[3]\n            const timestampConverted = new Date(record.timestamp)\n            var dateStr = timestampConverted.toDateString() \n\n            if (dateStr in  result) {\n                result[dateStr] += 1;\n            } else {\n                result[dateStr] = 1;\n            }\n            return result;\n        }, {});\n        \n        // Sorting for date dictionary so that dates will always be in ascending order\n        // when visualizing in graph.\n\n        var items = Object.keys(dateDict).map(function(key) {\n            return [key, dateDict[key]]\n        })\n        items.sort(function(first, second) {\n            var date1 = new Date(first)\n            var date2 = new Date(second)\n            return date1 > date2 \n        })\n        var newState = []\n        items.map(function(obj) {\n            const attendanceRecord = {date: obj[0], totalAttended: obj[1]}\n            newState.push(attendanceRecord);\n        })\n        this.setState({attendance: newState});\n\n    }\n\n    render(){\n        return (\n            <div className='line-charts-wrapper' width=\"150px\">\n                <LineChart width={1100} height={600} data={this.state.attendance}>\n                    <CartesianGrid stroke=\"#f5f5f5\" fill=\"#e6e6e6\" />\n                    <Legend\n                        onMouseEnter={this.handleLegendMouseEnter}\n                        onMouseLeave={this.handleLegendMouseLeave}\n                    />\n                    <XAxis dataKey=\"date\" height={40}>\n                    <Label value=\"Current Semester\" position=\"insideBottom\" />\n                    </XAxis>\n                    <YAxis type=\"number\" dataKey=\"totalAttended\" unit=\"\">\n                    <Label value=\"Amount of Students\" position=\"\" angle={-90} />\n                    </YAxis>\n                    <Tooltip />\n                    <Line type=\"monotone\" dataKey=\"totalAttended\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n                    \n                </LineChart>\n            </div>\n        )\n    }\n} "]},"metadata":{},"sourceType":"module"}